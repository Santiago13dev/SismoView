version: '3.9'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: sismoview-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-Xmx512m -Xms256m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: unless-stopped
    networks:
      - sismoview-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sismoview-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE=http://backend:8080
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - sismoview-network

  # Nginx como reverse proxy (opcional para producci√≥n)
  nginx:
    image: nginx:alpine
    container_name: sismoview-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - sismoview-network
    profiles:
      - production

networks:
  sismoview-network:
    driver: bridge
    name: sismoview-network

volumes:
  # Volumen para logs persistentes si se necesita
  logs:
    name: sismoview-logs
