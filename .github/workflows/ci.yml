name: CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  frontend:
    name: Frontend (demo)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: demo
    steps:
      - uses: actions/checkout@v4

      - name: Show tree (debug)
        run: |
          pwd
          ls -la
          echo "Lockfiles:"
          ls -la | grep -E "package-lock.json|yarn.lock|pnpm-lock.yaml" || true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18    # más compatible; si tu proyecto requiere 20, cámbialo a 20
          cache: npm
          cache-dependency-path: demo/package-lock.json

      - name: Detect package manager
        id: pm
        run: |
          if [ -f "pnpm-lock.yaml" ]; then
            echo "mgr=pnpm" >> $GITHUB_OUTPUT
          elif [ -f "yarn.lock" ]; then
            echo "mgr=yarn" >> $GITHUB_OUTPUT
          else
            echo "mgr=npm" >> $GITHUB_OUTPUT
          fi

      - name: Setup pnpm
        if: steps.pm.outputs.mgr == 'pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Enable corepack (yarn/pnpm)
        if: steps.pm.outputs.mgr != 'npm'
        run: corepack enable

      - name: Install deps
        run: |
          if [ "${{ steps.pm.outputs.mgr }}" = "pnpm" ]; then pnpm install --frozen-lockfile; \
          elif [ "${{ steps.pm.outputs.mgr }}" = "yarn" ]; then yarn install --immutable; \
          else if [ -f package-lock.json ]; then npm ci; else npm install; fi; fi

      - name: Build
        env:
          NEXT_TELEMETRY_DISABLED: 1
          CI: false   # evita que algunos linters detengan el build en CI
        run: |
          if [ "${{ steps.pm.outputs.mgr }}" = "pnpm" ]; then pnpm build; \
          elif [ "${{ steps.pm.outputs.mgr }}" = "yarn" ]; then yarn build; \
          else npm run build --if-present; fi

  backend:
    name: Backend (Gradle)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4

      - name: Show tree (debug)
        run: |
          pwd
          ls -la
          echo "Gradle wrapper?"; if [ -f gradlew ]; then echo "YES"; else echo "NO"; fi

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17    # cambia a 21 si tu build.gradle lo exige

      - uses: gradle/actions/setup-gradle@v3

      - name: Make gradlew executable (if exists)
        run: if [ -f gradlew ]; then chmod +x gradlew; fi

      - name: Build (wrapper if present, else system gradle)
        run: |
          if [ -f gradlew ]; then ./gradlew build --no-daemon --stacktrace; \
          else gradle build --no-daemon --stacktrace; fi
